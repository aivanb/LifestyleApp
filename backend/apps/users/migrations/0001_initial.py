# Generated by Django 4.2.7 on 2025-10-03 22:01

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('access_level_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(choices=[('admin', 'Admin'), ('user', 'User'), ('guest', 'Guest')], max_length=20, unique=True)),
            ],
            options={
                'db_table': 'access_levels',
            },
        ),
        migrations.CreateModel(
            name='ActivityLevel',
            fields=[
                ('activity_level_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'activity_levels',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('unit_id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'units',
            },
        ),
        migrations.CreateModel(
            name='UserGoal',
            fields=[
                ('user_goal_id', models.AutoField(primary_key=True, serialize=False)),
                ('tokens_goal', models.IntegerField(blank=True, null=True)),
                ('cost_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('lean_mass_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('fat_mass_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('calories_goal', models.IntegerField(blank=True, null=True)),
                ('protein_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('fat_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('carbohydrates_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('fiber_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sodium_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('sugar_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('saturated_fat_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('trans_fat_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('calcium_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('iron_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('magnesium_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cholesterol_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_a_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_c_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('vitamin_d_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('caffeine_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_goal',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='access_level',
            field=models.ForeignKey(db_column='access_level_id', on_delete=django.db.models.deletion.CASCADE, to='users.accesslevel'),
        ),
        migrations.AddField(
            model_name='user',
            name='activity_level',
            field=models.ForeignKey(blank=True, db_column='activity_level_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.activitylevel'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='unit_preference',
            field=models.ForeignKey(blank=True, db_column='unit_preference', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.unit'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
